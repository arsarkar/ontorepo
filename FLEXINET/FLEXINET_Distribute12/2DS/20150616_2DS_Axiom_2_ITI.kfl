:Name "Level 2 Designed Systems - Axioms"
:Description "Axioms pertaining to relations occurring at the Designed Systems level."
:Use 2DSCtx

;;;updated 17/02/2015 - removed Location axioms. Now using Highfleet SpacialLocation module.
;;;Added Fuzzy number axioms from risk section as these are generally applicable.
;;;LU amalgamated with Network, Gateway and Event axioms 16/06/2015

(=> (and (ServiceProduct ?service1)
(playsRole ?system1 ?service1 ?scenario1)
(Input ?input1)
(systemContainsRole ?system1 ?input1)
(playsRole ?basic1 ?input1 ?scenario1)
(instAsserted ?basic1 ?basictype)
)
(requiresInputOfType ?service1 ?basictype))
:rem "There is a Service. A System plays the Role of the Service. An Input exists to the Service.
;This implies that the Service requires input of this type."

(=>  (and (System ?system)
     (playsRole ?system ?role ?scenario)
	 ) 
	 (not(systemContainsRole ?system ?role))
)
:IC hard "The same System cannot contain a Role and play the Role. ?system playsRole ?role in Scenario ?scenario. 
The relation systemContainsRole does not hold between ?system and ?role."


;;;;Network axioms						

;  =============================================================
(=> (Network ?network)	
		;(exists (?s)
		 (and 	(System ?s) 
				(count 	(basicContainsBasic ?network ?s) ?nSys)
				(RootCtx.lteNum 2 ?nSys)))				
:IC hard "Axiom2.1 A ?network must contain more than one ?system."

;  =============================================================
(=> (and   	(Basic ?basic)
			(Output ?outputRole)			
			(System ?sOutput)
			(Scenario ?Scene1)					
			(playsRole ?basic ?outputRole ?Scene1)
			(requiresA ?outputRole ?sOutput)
			(systemContainsRole ?sOutput ?outputRole)						
	)
		(exists (?inputRole)
			(and 	(Input ?inputRole)
					(playsRole ?basic ?inputRole ?Scene1)
					(requiresA ?inputRole ?sInput)
					(systemContainsRole ?sInput ?inputRole)												
					(and ( exists (?network)	
							(and 	(Network ?network)
									(basicContainsBasic ?network ?iSys)
									(basicContainsBasic ?network ?oSys)))))))
:IC hard "Axiom2.2 A ?basic playing the role of an output must play the role of an input to another entity (a basic) within the network."
    
;;;Gateway axioms
;  =============================================================
(=> (Gateway ?g)
	(exists (?inputRole ?outputRole) 
		(and
			(Input ?inputRole)
			(Output ?outputRole)
			(gatewayContainsRole ?g ?inputRole)
			(gatewayContainsRole ?g ?outputRole))))
:IC hard "Axiom 2.3: A gateway must have one input and one output"
;=====================================================================
(=> (DivergingGateway ?dg) 
	;(exists (?inputRole ?outputRole) 
		(and 
			(Input ?inputRole)
			(Output ?outputRole)
			(count (gatewayContainsRole ?dg ?inputRole) ?nin)
			(count (gatewayContainsRole ?dg ?outputRole) ?nout)
			(= ?nin 1)
			(RootCtx.lteNum 2 ?nout)))
:IC hard "Axiom 2.4: A diverging gateway has only one input and 2 or more outputs (describes an opening AND or a fork)"

;=====================================================================
(=>(ConvergingGateway ?dg) 
	;(exists (?inputRole ?outputRole) 
		(and 
			(Input ?in)
			(Output ?out)
			(count (gatewayContainsRole ?dg ?inputRole) ?nin)
			(count (gatewayContainsRole ?dg ?outputRole) ?nout)
			(= ?nout 1)
			(RootCtx.lteNum 2 ?nin)))
:IC hard "Axiom 2.5: A converging gateway has 2 or more inputs and only one output (describes an closing AND or a join)"

;=====================================================================
(=>(InclusiveDivergingGateway ?idg) 
		(and 
			(Condition ?outCondition)
			(OutputHasCondition ?outputRole ?outCondition)))
:IC hard "Axiom 2.6: A inclusive diverging gateway (opening OR) has one input and 2 or more outputs An output must have a condition (a boolean)". 

;=====================================================================
(=>(InclusiveConvergingGateway ?icg) 
		(and 
			(Condition ?inCondition)
			(InputHasCondition ?inputRole ?inCondition)))
:IC hard "Axiom 2.7: An inclusive converging gateway (“closing OR”) has one default output and two or more inputs. An input must have a condition (a boolean). "

;=====================================================================
(=> (and  (ExclusiveDivergingGateway ?edg) 
		  (Output ?outputRole)
		  (Output ?outputRole1)
		  (/= ?outputRole ?outputRole1)
		  (gatewayContainsRole ?edg ?outputRole)  							
		  (gatewayContainsRole ?edg ?outputRole1))
	(not (exists (?outCondition)					
			(and (Condition ?outCondition)
				(OutputHasCondition ?outputRole ?outCondition)
				(OutputHasCondition ?outputRole1 ?outCondition)))))
:IC hard "Axiom 2.8: An exclusive diverging gateway (“opening XOR”, branch) inherits from an inclusive diverging gateway. The value of the condition of an output must not be identical to the value of the condition of any of the other outputs of the XOR gateway (i.e. only one condition within the XOR gateway can activated, so only one branch can be taken). "

;=====================================================================
(=> (and  (ExclusiveConvergingGateway ?ecg) 
		  (Input ?inputRole)
		  (Input ?inputRole1)
		  (/= ?inputRole ?inputRole1)
		  (gatewayContainsRole ?ecg ?inputRole)  							
		  (gatewayContainsRole ?ecg ?inputRole1))
	(not (exists (?inputRole1)
			(and				
				(Condition ?inCondition)					
				(InputHasCondition ?inputRole ?inCondition)
				(InputHasCondition ?inputRole1 ?inCondition)))))
:IC hard "Axiom 2.9: An exclusive converging gateway (“closing XOR”, merge) inherits from an inclusive diverging gateway. The value of the condition of an input must not be identical to the value of the condition of any of the other inputs of the XOR gateway (i.e. only one condition within the XOR gateway can activated, so only one incoming flow is needed)."

;  =============================================================
(=> (StartEvent ?startEvent)
	(and 
		(Output ?outputRole)
		(count (startEventRel ?startEventRel ?outputRole)  ?nRels)
		(= ?nRels 1)))
:IC hard "Axiom 2.10: A Start Event is a specialised type of Basic which has an output role only (which is played by the trigger for the network). Examples of Start Point outputs are New Technology (KSB), Product-Service Request (Indesit) and Customer Request (CD). "


;  =============================================================
(=> (EndEvent ?endEvent)
	(and 
		(Input ?inputRole)
		(count (endEventRel ?endEvent ?inputRole)  ?nRels)
		(= ?nRels 1)))
:IC hard "Axiom 2.11: An End Event is a specialised type of Basic which has an input role only."

